Bitacora

Durante el mes de agosto y hasta el 12 de Septiembre se realizo principalmente trabajo de investigacion sobre como realizar el royecto.
Principalmente sobre como realizar el mapeop, que tecnologias utilizar, y demas. 
Y por otro lado se realizo el dise;o prototipo del vehiculo.

15 de Septiembre

Se creo el workspace para el backend, frontend, y mcu. 
Y se implemento la DB y el primer controlador en el back, lograndoc crear, y obtener mensages desde la db.

16 de Septiembre

Se creo el servicio para comunicar el back con el ESP32
Se crearon las librerias i2c y lights para el MCU

19 de Septiembre
Creacion de las librerias http
Creacion del Diagrama electrico 

24 y 25 de Septiembre
Correccion de las librerias http

26 de Septiembre
Correccion de las librerias i2c y lights
Implementacion inicial de libreria para sensor lidar
Inicio de impresion de la pate principal del vehiculo
Inicio del diseño del PCB

28 de Septiembre
Se creo la libreria ap_server para configurar al ESP32 como un Access Point
Impresion completada - Fallas de diseño encontradas y pendentientes de arreglo
29 de Septiembre
Agrego servidor TCP en la libreria ap_server

30 de Septiembre
Creacion de Interface, Service y Controller de la entidad SensorValue
Creacion de entidad Instruction junto con su Interface, Service y Controller.

01 de Octubre
Se generó la carpeta "Build" dentro de "Microcontroller"

02 de Octubre
Agrego servidor http para empezar a testear

04 de Octubre
Se creó la librería de control de los motores DC
Nos reunimos y testeamos las librerias de motores y wifi AP y ambas funcionaron como se esperaba
Esto implico testear los otores, el driver, y la fuente.
El diseño 3D tiene defectos a corregir

11 de Octubre
Se realizaron correciones al diseño 3D del pa parte princiapl, y se continuo con las partes superiores
Se testeo la libreria HTTP del MCU al BACKEND y funcionan.

14 de Octubre
Se opto por implementar MQTT en ves de HTTP entre el MCU y el backend
Se implmento MQTT en el BACKEND

21 de Octubre
Se creó la librería de control del sensor VL53L0X

23 de Octubre
Se implemento una libreria para el tratamiento de datos JSON
Se implemento una libreria MQTT Server para configurar y gestionar la conexion MQTT
Se implemento una libreria instruction buffer para intermediar en el recibimiento de informacion, de modo de no perder informacion mientras se ejecute otras tareas.
Se implemento una libreria MQTT Handler para abstraer la funciones de envio y recepcion de informacion
Se finalizo el testeo de MQTT tanto para recibir como para envio, de manera satisfactoria. Esto incluyo el testeo exito del reinicio remoto.
Se implemento la libreria checkpoint de modo de generar un punto de retorno en el programa. De modo de implementar en un futuro una funcion que permita abortar el flujo de ejecucion del programa y volver a punto seguro.
Se eliminaron las librerias HTTP_SERVER y HTTP_Handler, ya reemplazas por MQTT
24 de Octubre
Se actualizó la librería de control del sensor LiDAR

31 de Octubre
Agrego libreria para comunicacion con Backend

3 de Noviembre
Se organizo el frontend, y se crearon los componentes base vacios.
Se implemento la base del sidenav y la estructura basica de la pagina.
Se modifico la libreria de mqtt_server por compatibilidad de datos recibidos y backend_comm para agregar tags en los mensajes al backend.

06 de Noviembre
Se actualizó la librería de control del sensor VL53L0X.
La misma ahora es funcional y provee la distancia a objetos.

9 de Noviembre
Modificacion de la libreria mqtt_handler para el envio de tags y tipo de mensajes (warning, error, info)

13 de Noviembre 
Se agrega libreria para testeo del monitor en la pagina web.

15 de Noviembre
Agrego para ver hora e identacion en los mensajes del monitor.

16 de Noviembre
Libreria de mensages terminado, todo funcionando y testeado con el backend.
Se testeo y mejoro la libreria lights

18 de Noviembre
Libreria INA219 I2C

06 de Diciembre
INA219 Funcionando y testeado