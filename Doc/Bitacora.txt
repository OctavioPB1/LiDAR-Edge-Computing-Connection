Bitacora

Durante el mes de agosto y hasta el 12 de Septiembre se realizo principalmente trabajo de investigacion sobre como realizar el royecto.
Principalmente sobre como realizar el mapeop, que tecnologias utilizar, y demas. 
Y por otro lado se realizo el dise;o prototipo del vehiculo.

15 de Septiembre

Se creo el workspace para el backend, frontend, y mcu. 
Y se implemento la DB y el primer controlador en el back, lograndoc crear, y obtener mensages desde la db.

16 de Septiembre

Se creo el servicio para comunicar el back con el ESP32
Se crearon las librerias i2c y lights para el MCU

19 de Septiembre
Creacion de las librerias http
Creacion del Diagrama electrico 

24 y 25 de Septiembre
Correccion de las librerias http

26 de Septiembre
Correccion de las librerias i2c y lights
Implementacion inicial de libreria para sensor lidar
Inicio de impresion de la parte principal del vehiculo
Inicio del diseño del PCB

28 de Septiembre
Se creo la libreria ap_server para configurar al ESP32 como un Access Point
Impresion completada 
- Fallas de diseño encontradas y pendentientes de arreglo

29 de Septiembre
Se agrego servidor TCP en la libreria ap_server

30 de Septiembre
Creacion de Interface, Service y Controller de la entidad SensorValue
Creacion de entidad Instruction junto con su Interface, Service y Controller.

01 de Octubre
Se generó la carpeta "Build" dentro de "Microcontroller"

02 de Octubre
Se agrego el servidor http 

04 de Octubre
Se creó la librería de control de los motores DC
Nos reunimos y testeamos las librerias de motores y wifi AP y ambas funcionaron como se esperaba
Esto implico testear los motores, el driver, y la fuente.
El diseño 3D tiene defectos a corregir

11 de Octubre
Se realizaron correciones al diseño 3D del pa parte princiapl, y se continuo con las partes superiores
Se testeo la libreria HTTP del MCU al BACKEND y funcionan.

14 de Octubre
Se opto por implementar MQTT en ves de HTTP entre el MCU y el backend
Se implmento MQTT en el BACKEND

21 de Octubre
Se creó la librería de control del sensor VL53L0X

23 de Octubre
Se implemento una libreria para el tratamiento de datos JSON
Se implemento una libreria MQTT Server para configurar y gestionar la conexion MQTT
Se implemento una libreria instruction buffer para intermediar en el recibimiento de informacion, de modo de no perder informacion mientras se ejecute otras tareas.
Se implemento una libreria MQTT Handler para abstraer la funciones de envio y recepcion de informacion
Se finalizo el testeo de MQTT tanto para recibir como para envio, de manera satisfactoria. Esto incluyo el testeo exitoso del reinicio remoto.
Se implemento la libreria checkpoint de modo de generar un punto de retorno en el programa. Para en un futuro implementar una  funcion que permita abortar el flujo de ejecucion del programa y volver a punto seguro.
Se eliminaron las librerias HTTP_SERVER y HTTP_Handler, ya reemplazas por MQTT

24 de Octubre
Se actualizó la librería de control del sensor LiDAR

31 de Octubre
Se agrego la libreria para la comunicacion con el Backend

3 de Noviembre
Se organizo el frontend, y se crearon los componentes base vacios.
Se implemento la base del sidenav y la estructura basica de la pagina.
Se modifico la libreria de mqtt_server por compatibilidad de datos recibidos y backend_comm para agregar tags en los mensajes al backend.

06 de Noviembre
Se actualizó la librería de control del sensor VL53L0X.
La misma ahora es funcional y provee la distancia a objetos.

9 de Noviembre
Se modifico la libreria mqtt_handler para el envio de tags y tipo de mensajes (warning, error, info)

13 de Noviembre 
Se agrega libreria para testeo del monitor en la pagina web.

15 de Noviembre
Se agrego identacion y timestamp en los mensajes del monitor.

16 de Noviembre
Libreria de mensages terminado, todo funcionando y testeado con el backend.
Se testeo y mejoro la libreria lights

18 de Noviembre
Se agrego la libreria INA219 I2C

19 de Noviembre
Se crearon los prototipos de los botones del sidebar.

20 de Noviembre 
Se agrego la libreria para visualizar mapa con obstaculos detectados (Testeo de d3.js con datos de prueba)

22 de Noviembre
Se realizaron mejoras con respecto a la visualizacion del mapa (cambios en el diseño).
Se agrego funcion para generar puntos de forma aleatoria para testeo.
Funcion para capturar el mapa en un momento determinado (falta mejorar).

23 de Noviembre
Implementado el componente para leer un joystick y poder controlar el robot. 
Pendiente crear el servicio y apartado visual.

27 de Noviembre
Se modifico la libreria para visualizar mapa, para que al hacer click sobre este se expanda o vuelva a su tamaño normal.
Se modifico la libreria del monitor para que al hacer click se expanda o vuelva a su tamaño original.

01 de Diciembre
Merge de librerias de monitor y map.
Se modifico la libreria monitor (merge ya realizado) para visualizar mapa y monitor al mismo tiempo. 
Ademas de agregar cambios necesarios para que cuando un componente se expanda el otro se contraiga.

02 de Diciembre
El sidneav mustra el status de conexion del Gamepad.
El gamepad es correctamente leido, y que pendiente implementar la comunicacion con el backend.

03 de Diciembre
Se modifico libreria del monitor para que cuando el mapa se expanda, se oculte el monitor.
Ademas, se realizaron mejoras en la visualizacion al expandir/contraer.

04 de Diciembre
El envio de instrucciones funciona, botones pendiente de asignar acciones
Mejora del componenete gamepad
Realizo modificaciones en el diseño de los botones del sidebar
Monitor frontend funcionando, queda pendiente la scrollbar y ajustes esticos

05 de Diciembre
Se agrego documentacion de las librerias mqtt_handler, mqtt_server, lights, i2c, json_helper e instruction_buffer.
Se agrego Swagger para documentacion del Backend

06 de Diciembre
Se arreglo el error al expandir/contraer los componentes.

08 de Diciembre
Se agrego todos los componentes en la pagina web y modifico el tamaño de estos.
Se modifico para que reciba los puntos a graficar desde el backend en el mapa.
Se empezo a integrar todas las funcionalidades en el MCU, y a su testeo.
Se ensamblo el robot.

09 de Diciembre
Funcionalidad de botones

10 de Diciembre
Se detectaron 3 Fallas Graves
- El Backend no se conecta a MQTT en la Notebook.
- MQTT crashea con los semaforos de FreeRTOS, por tanto no puede recibir datos.
- La conexion I2C del PCB no funciona, posiblemente por ruido en las pistas.

-- 2025 --

2 de Enero
Se re-diseno el robot para tener mas espacio para las conexiones
Se soluciono el Problema del Backend en la notebook
- Se reemplazo localhost por la IP asignada directamente al server por el ESP32.

3 de Enero
Se testeo libreria para anadir el desplazamiento del robot en el mapa.

7 de Enero
Se incio el testeo de los sensore LiDAR y INA219 en simultaneo

8 de Enereo
Los sensores funcionan en conjunto

11 de Enero
No se logro solucionar el conflicto MQTT - FreeRTOS
- Se reemplazara al recibir MQTT por HTTP en el backend.

12 de Enero
Se agrego TCP server
Se agrego la tarea y funciones correspondientes para recibir instrucciones por HTTP

13 de Enero
Se envio a imprimir el robot

15 de Enero
Correccion de errores en tarea para recibir instrucciones por HTTP

20 de Enero
Revision de errores en libreria HTTP y tarea para recibir instrucciones

03 de Enero
Testeo desplazamiento de auto en mapeo.

23 de Enero
Modifico para que reciba lista de puntos desde el backend


