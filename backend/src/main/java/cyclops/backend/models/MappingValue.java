package cyclops.backend.models;

import java.time.LocalDateTime;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.TimeSeries;

import io.swagger.v3.oas.annotations.media.Schema;

@TimeSeries(collection = "MappingValues", timeField = "date")
@Schema(description = "Represents mapping values ​​generated by sensors")
public class MappingValue {

    @Id
    @Schema(description = "Unique identifier of the mapped value", example = "63f7b9a6e94b1e456d2a3c9f")
    private String id;

    @Schema(description = "Distance measured by the sensor in millimeters", example = "1200")
    private long distance;

    @Schema(description = "Angle measured by the sensor in degrees", example = "45")
    private int angle;

    @CreatedDate
    @Schema(description = "Date and time of value creation", example = "2024-12-05T12:00:00Z", format = "date-time")
    private LocalDateTime date;

    @Schema(description = "Indicates whether the MappingValue has been read", example = "false")
    private boolean read = false;

    public MappingValue() {
    }

    public MappingValue(long distance, int angle, LocalDateTime date) {
        this.distance = distance;
        this.angle = angle;
        this.date = date;
    }

    public long getDistance() {
        return distance;
    }

    public int getAngle() {
        return angle;
    }

    public LocalDateTime getDate() {
        return date;
    }

    public void setDistance(long distance) {
        this.distance = distance;
    }

    public void setAngle(int angle) {
        this.angle = angle;
    }

    public void setDate(LocalDateTime date) {
        this.date = date;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setRead(boolean read){
        this.read = read;
    }

    public boolean getRead(){
        return read;
    }
}
